package com.raqtxhin.games.dhongi.Services;

import java.util.ArrayList;
import java.util.Optional;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;

import com.raqtxhin.games.dhongi.Entities.Game;
import com.raqtxhin.games.dhongi.Entities.Player;
import com.raqtxhin.games.dhongi.Repositories.GameRepo;
import com.raqtxhin.games.dhongi.Repositories.PeopleRepo;
import com.raqtxhin.games.dhongi.Repositories.PlayerRepo;

/**
 * Service
 */
@org.springframework.stereotype.Service
public class Service {

	@Autowired
	private PlayerRepo playerRepo;
	private GameRepo gameRepo;
	private PeopleRepo peopleRepo;

	public String createGame(Player player) {
		if (!player.getIsLeader())
			return "ERROR : 403";
		String newGameId = UUID.randomUUID().toString();
		ArrayList<Player> playerList = new ArrayList<>();
		playerList.add(player);
		Game newGame = new Game(newGameId, playerList, true, true);
		gameRepo.save(newGame);
		return newGameId;
	}

	public String joinGame(String playerName, String gameId) {
		Optional<Game> currGame = gameRepo.findById(gameId);
		if (currGame.isEmpty())
			return "GAME NOT FOUND : 404";
		Player newPlayer = new Player(playerName, false);
		currGame.get().getPlayers().add(newPlayer);
		return currGame.get().getGameId();
	}

	public Boolean startGame(String playerName, String gameId) {
		Optional<Game> currGame = gameRepo.findById(gameId);
		if (currGame.isEmpty())
			return false;
		ArrayList<Player> currPlayerList = currGame.get().getPlayers();
		Optional<Player> currPlayer = currPlayerList.stream().filter(player -> player.getName().equals(playerName))
				.findFirst();
		if (currPlayer.isEmpty() || !currPlayer.get().getIsLeader())
			return false;
		// TODO
		return true;

	}
	public void setGame(String gameId)
	{	
			
	}



}
